// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"blog/internal/biz"
	"blog/internal/data"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/api/kratos/config/grpc"
	"github.com/go-kratos/kratos/v2/api/kratos/config/http"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

func NewApp(hc *http.Server, gc *grpc.Server, dc *data.DBConfig, logger log.Logger) (*kratos.App, error) {
	server := httpServerProvider(hc, logger)
	grpcServer := grpcServerProvider(gc, logger)
	postRepo, err := NewPostRepo(dc, logger)
	if err != nil {
		return nil, err
	}
	postService := postServiceProvider(server, grpcServer, postRepo, logger)
	app := newApp(postService, server, grpcServer)
	return app, nil
}

func NewPostRepo(conf *data.DBConfig, logger log.Logger) (biz.PostRepo, error) {
	db := data.NewDB(conf, logger)
	postRepo := data.NewPostRepo(db, logger)
	return postRepo, nil
}
